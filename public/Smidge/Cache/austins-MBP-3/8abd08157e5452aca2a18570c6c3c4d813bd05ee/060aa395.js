(function(){"use strict";function userGroupPickerController($scope,editorService,uSyncPublishService,userService){function loadUserGroups(){vm.groups=[];uSyncPublishService.getUserGroups().then(function(result){var userGroups=result.data;vm.value.forEach(function(alias){var userGroup=_.where(userGroups,{alias:alias});userGroup!==null&&userGroup.length===1&&vm.groups.push(userGroup[0])});vm.loading=!1})}function syncGroupList(){var list=[];vm.groups.forEach(function(group){list.push(group.alias)});vm.value=list;$scope.model.value.groups=vm.value}function remove(group){for(let i=0;i<vm.groups.length;i++)if(vm.groups[i].alias===group.alias){vm.groups.splice(i,1);break}syncGroupList()}function open(){var currentSelection=[],options;angular.copy(vm.groups,currentSelection);options={selection:currentSelection,submit:function(model){model.selection&&(vm.groups=model.selection,syncGroupList());editorService.close()},close:function(){editorService.close()}};editorService.userGroupPicker(options)}var vm=this;vm.remove=remove;vm.open=open;vm.loading=!0;vm.readonly=!0;vm.groups=[];vm.value=$scope.model.value.groups;vm.value||(vm.value=[]);loadUserGroups();userService.getCurrentUser().then(function(currentUser){vm.readonly=!currentUser.allowedSections.includes("users")})}angular.module("umbraco").controller("usyncUserGroupPickerController",userGroupPickerController)})()