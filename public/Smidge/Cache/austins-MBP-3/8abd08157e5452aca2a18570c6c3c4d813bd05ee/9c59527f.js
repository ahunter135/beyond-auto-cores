(function(){"use strict";function serverManager(overlayService,notificationsService,uSyncPublishService){function checkServer(alias,showSuccessBar,callback){uSyncPublishService.checkServer(alias).then(function(result){showSuccessBar&&notificationsService.success("Connected","Server connection setup");callback&&callback(result.data)},function(error){notificationsService.error("error",error.data.exceptionMessage);callback&&callback(null)})}function checkServerByUrl(url,callback){uSyncPublishService.checkServerUrl(url).then(function(result){callback&&callback(result.data)},function(error){callback&&callback({Status:"Error",Message:error.data.ExceptionMessage})})}function createLocalApiKeys(){var overlay={title:"Generate security keys",subtitle:"Generate a required security id and key",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"remote/setupkeys.html",isModal:!0,showResult:!1,busy:!1,disableBackdropClick:!0,disableEscapeKey:!0,skipFormValidation:!0,submitButtonLabel:"Generate security key config",closeButtonLabel:"Not now",submit:function(model){uSyncPublishService.createKeys().then(function(result){model.result=result.data;model.hideSubmitButton=!0;model.closeButtonLabel="Close";model.showResult=!0},function(){notificationsService.error("Error","Unable to setup server");overlayService.close()})},close:function(){overlayService.close()}};overlayService.open(overlay)}function remoteSetup(server,callback){var overlay={title:"Setup "+server.name,subtitle:"Setup API connection to "+server.url,view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"remote/remoteOverlay.html",server:server,isModal:!0,busy:!1,disableBackdropClick:!0,disableEscKey:!0,skipFormValidation:!0,disableSubmitButton:!0,submitButtonLabel:"Continue",closeButtonLabel:"Close",submit:function(model){model.busy=!0;model.disableSubmitButton=!0;uSyncPublishService.setupServer(model.server.alias,model.server.url,model.username,model.password).then(function(result){result.data.Success?(notificationsService.success("Success",result.data.message),overlayService.close(),callback&&callback(result.data.success)):(model.busy=!1,model.showError=!0,model.error=result.data.message)},function(){notificationsService.error("Error","Unable to setup server");callback&&callback(!1);overlayService.close()})},close:function(){overlayService.close()}};overlayService.open(overlay)}function syncSettings(callback){var overlay={title:"Sync Settings",subtitle:"Syncronize publisher settings between servers",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"remote/syncSetup.html",isModal:!0,servers:[],busy:!1,disableBackdropClick:!0,disableEscKey:!0,disableSubmitButton:!0,skipFormValidation:!0,submitButtonLabel:"Syncronize",closeButtonLabel:"Close",submit:function(model){model.busy=!0;model.servers.length>0&&uSyncPublishService.syncSettings(model.servers).then(function(result){overlayService.close();callback&&callback(result.data.success);result.data.success?notificationsService.success("Success","Server settings synced"):(notificationsService.warning("Sync Issue","One or more servers failed to sync - see browser console for details"),console.warn("Sync Failures: ",result.data.servers))},function(error){notificationsService.error("Error","Unable to setup server");console.error("sync error",error);callback&&callback(!1);overlayService.close()})},close:function(){overlayService.close()}};overlayService.open(overlay)}return{checkServer:checkServer,checkServerByUrl:checkServerByUrl,createLocalApiKeys:createLocalApiKeys,remoteSetup:remoteSetup,syncSettings:syncSettings}}angular.module("umbraco").factory("uSyncPublishServerManager",serverManager)})()